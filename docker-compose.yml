version: '3.8'

services:
  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: front
    ports:
      - "3000:80"  # React app served on port 3000 externally
    restart: unless-stopped
  chat-app:
    build:
     context: ./chat-app
     dockerfile: Dockerfile
    container_name: chat-app
    ports:
    - "5000:3000"  # External port 5000 mapped to internal port 3000
    restart: unless-stopped
    depends_on:
    - front
    - rabbitmq
    environment:
      NODE_ENV: developpement
      RABBITMQ_URL: amqp://admin:password123@rabbitmq:5672/
      PORT: 3000
    volumes:
    - ./chat-app:/app


  worker-app:
    build:
      context: ./worker-app
      dockerfile: Dockerfile
    container_name: worker-app
    restart: unless-stopped
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_URL: amqp://admin:password123@rabbitmq:5672/
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:3.12-management  # Management plugin included
    container_name: rabbitmq
    restart: unless-stopped  # Auto-recover on crashes
    ports:
      - "5672:5672"    # AMQP protocol
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin       # Default credentials
      RABBITMQ_DEFAULT_PASS: password123 # Change in production!
      RABBITMQ_DEFAULT_VHOST: /          # Explicit default virtual host
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq  # Persistent message storage




volumes:
  rabbitmq_data:  # Named volume for message durability